# docker-compose.yml
services:
  postgres:
    image: postgres:16-alpine
    container_name: pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile   # see Dockerfile example below
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app_pw
      # R2DBC alternative:
      # SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/appdb
      # SPRING_R2DBC_USERNAME: app
      # SPRING_R2DBC_PASSWORD: app_pw
    ports:
      - "8080:8080"   # expose API to your host browser/Postman

volumes:
  pgdata:
